[project]
name = "podcast_animator"
version = "0.1"
description = "Audio Animation Script for the Workshopapp.org/voxclips, pytest, flake8, mypy, coverage. tox configured"
readme = "README.md"   
requires-python = ">=3.9" 
license = {file = "LICENSE.txt"}


authors = [
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
]


maintainers = [
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
  {name = "A. Nwizugbe Samson", email = "samson6398@gmail.com" },
]

classifiers = [  
  "Development Status :: 3 - Alpha",

  
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Image Processing",

 
  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [ 
    "Pillow==9.1.1",
    "opencv-contrib-python==4.6.0.66",
    "requests==2.27.1",
    "g2p_en==2.1.0",
    "inflect==6.0.2",
    "python-dotenv==0.21.0",
    "moviepy==1.0.3",
    "toolz==0.12.0",
]

[project.optional-dependencies]
dev = [
    "black==22.10.0",
    "flake8==3.7.9",
    "pre-commit",
    "pydocstyle",
    "pytest",
    "pytest-black",
    "pytest-clarity",
    "pytest-dotenv",
    "pytest-flake8",
    "tox",
    "mypy",
    "pytest-cov",
    "coverage"
]



[project.urls]
"Website" = "https://voxclips.hng.tech"
"Bug Tracker" = "https://github.com/workshopapps/animatedtalkingheads.api/issues"
"Source Code" = "https://github.com/workshopapps/animatedtalkingheads.api/tree/staging/pyhton-backend"

[project.scripts]  
animate = "podcast_animator.start:main"


[build-system]
requires = ["setuptools>=42.0", "wheel"]
build-backend = "setuptools.build_meta"


[tool.black]
line-length = 89
target-version = ['py39', 'py310']
include = '\.pyi?$'
exclude =  '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.vscode
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | venv
    | env
)/
'''


[tool.pytest-clarity]
target-version = ['py39', 'py310']


[tool.pytest-black]
line-length = 89
target-version = ['py39', 'py310']
include = '\.pyi?$'
exclude =  '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.vscode
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | venv
    | env
)/
'''

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
exclude =  '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.vscode
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | venv
    | env
)/
'''

[tool.flake8]
max-line-length = 89
ignore = ['E203', 'E266', 'E501', 'W503', 'E266']
target-version = ['py39', 'py310']
include = '\.pyi?$'
exclude =  '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.vscode
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | venv
    | env
)/
'''
